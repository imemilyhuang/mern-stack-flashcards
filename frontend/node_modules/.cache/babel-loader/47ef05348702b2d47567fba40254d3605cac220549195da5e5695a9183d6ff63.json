{"ast":null,"code":"var _jsxFileName = \"/Users/emilyh/workspace/washu/cse330s/creative-project-cp-518897-520021/frontend/src/components/HomePage.js\",\n  _s = $RefreshSig$();\n// // import React from 'react';\n// // import { Link } from 'react-router-dom';\n\n// // const HomePage = () => {\n// //   return (\n// //     <div className=\"home-page\">\n// //       <h1>Flashcard Study Site</h1>\n// //       <p>Select an option from the navigation above or choose a flashcard set to review:</p>\n// //       <ul>\n// //         <li><Link to=\"/review/1\">Review Flashcards</Link></li> {/* Example review link */}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// cite https://github.com/mongodb-developer/mern-stack-example/blob/main/mern/client/src/components/RecordList.jsx for \n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlashcardSet = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"card-form\",\n  style: {\n    padding: \"1rem\",\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    borderColor: \"#dbdbdb\",\n    borderRadius: 6,\n    backgroundColor: \"red\"\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n    children: props.flashcardset.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), props.flashcardset.description, /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/review/${props.flashcardset._id}`,\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${props.flashcardset._id}`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        props.deleteSet(props.flashcardset._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n_c = FlashcardSet;\nexport default function SetList() {\n  _s();\n  const [flashcardsets, setSets] = useState([]);\n\n  // this method fetches the sets from the database\n  useEffect(() => {\n    async function getSets() {\n      let userId = localStorage.getItem('userId');\n      const response = await fetch(`http://localhost:5050/api/flashcards/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        console.error(message);\n        return;\n      }\n      const flashcardsets = await response.json();\n      setSets(flashcardsets);\n    }\n    getSets();\n    return;\n  }, [flashcardsets.length]);\n\n  // this method will delete a set\n  async function deleteSet(id) {\n    try {\n      const response = await fetch(`http://localhost:5050/api/flashcards/${id}`, {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create flashcard set');\n      }\n      const data = await response.json();\n      if (data._id) {\n        try {\n          await fetch(`http://localhost:5050/api/flashcards/deleteSet/${data._id}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n              setId: data._id\n            })\n          });\n        } catch (error) {\n          console.error(error);\n          alert('Error deleting set when posting');\n        }\n      } else {\n        alert('Error with ID when deleting set');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting set');\n    }\n    const newSets = flashcardsets.filter(el => el._id !== id);\n    setSets(newSets);\n  }\n\n  // map sets to table\n  function setList() {\n    return flashcardsets.map(flashcardset => {\n      return /*#__PURE__*/_jsxDEV(FlashcardSet, {\n        flashcardset: flashcardset,\n        deleteSet: () => deleteSet(flashcardset._id)\n      }, flashcardset._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  // show table of user's sets\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"white-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Flashcard Sets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      children: setList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(SetList, \"wt0cT5ThZikdlWrWVqGCcFUQbok=\");\n_c2 = SetList;\nvar _c, _c2;\n$RefreshReg$(_c, \"FlashcardSet\");\n$RefreshReg$(_c2, \"SetList\");","map":{"version":3,"names":["useEffect","useState","Link","jsxDEV","_jsxDEV","FlashcardSet","props","className","style","padding","borderStyle","borderWidth","borderColor","borderRadius","backgroundColor","children","flashcardset","title","fileName","_jsxFileName","lineNumber","columnNumber","description","type","to","_id","onClick","deleteSet","_c","SetList","_s","flashcardsets","setSets","getSets","userId","localStorage","getItem","response","fetch","method","headers","ok","message","statusText","console","error","json","length","id","Error","data","body","JSON","stringify","setId","alert","newSets","filter","el","setList","map","width","_c2","$RefreshReg$"],"sources":["/Users/emilyh/workspace/washu/cse330s/creative-project-cp-518897-520021/frontend/src/components/HomePage.js"],"sourcesContent":["// // import React from 'react';\n// // import { Link } from 'react-router-dom';\n\n// // const HomePage = () => {\n// //   return (\n// //     <div className=\"home-page\">\n// //       <h1>Flashcard Study Site</h1>\n// //       <p>Select an option from the navigation above or choose a flashcard set to review:</p>\n// //       <ul>\n// //         <li><Link to=\"/review/1\">Review Flashcards</Link></li> {/* Example review link */}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// cite https://github.com/mongodb-developer/mern-stack-example/blob/main/mern/client/src/components/RecordList.jsx for \n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst FlashcardSet = (props) => (\n  <div className=\"card-form\" style={{padding: \"1rem\", borderStyle: \"solid\", borderWidth: 2, borderColor: \"#dbdbdb\", borderRadius: 6, backgroundColor: \"red\"}}>\n    <h4>{props.flashcardset.title}</h4>\n    {props.flashcardset.description}\n    <div>\n      <button type=\"button\">\n        <Link to={`/review/${props.flashcardset._id}`}>\n          Review\n        </Link>\n      </button>\n      <button type=\"button\">\n        <Link to={`/edit/${props.flashcardset._id}`}>\n          Edit\n        </Link>\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.deleteSet(props.flashcardset._id);\n        }}\n      >\n        Delete\n      </button>\n    </div>  \n  </div>\n);\n\nexport default function SetList() {\n  const [flashcardsets, setSets] = useState([]);\n\n  // this method fetches the sets from the database\n  useEffect(() => {\n    async function getSets() {\n      let userId = localStorage.getItem('userId');\n       const response = await fetch(`http://localhost:5050/api/flashcards/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        }\n      });\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        console.error(message);\n        return;\n      }\n      const flashcardsets = await response.json();\n      setSets(flashcardsets);\n    }\n    getSets();\n    return;\n  }, [flashcardsets.length]);\n\n  // this method will delete a set\n  async function deleteSet(id) {\n    try {\n    const response = await fetch(`http://localhost:5050/api/flashcards/${id}`, {\n      method: \"GET\",\n    });  \n      if (!response.ok) {\n        throw new Error('Failed to create flashcard set');\n      }\n\n      const data = await response.json();\n      if (data._id) {\n        try {\n          await fetch(`http://localhost:5050/api/flashcards/deleteSet/${data._id}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({setId: data._id})\n          });\n        }\n        catch (error) {\n          console.error(error);\n        alert('Error deleting set when posting');\n        }\n      } else {\n        alert('Error with ID when deleting set');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error deleting set');\n    }\n    const newSets = flashcardsets.filter((el) => el._id !== id);\n    setSets(newSets);\n  }\n\n  // map sets to table\n  function setList() {\n    return flashcardsets.map((flashcardset) => {\n      return (\n        <FlashcardSet\n          flashcardset={flashcardset}\n          deleteSet={() => deleteSet(flashcardset._id)}\n          key={flashcardset._id}\n        />\n      );\n    });\n  }\n\n  // show table of user's sets\n  return (\n    <div className=\"white-container\">\n      <h2>Your Flashcard Sets</h2>\n        <div style={{width: \"100%\"}}>\n          {setList()}\n        </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}